// ####Задача 1

// Напишите функцию `f`, которая возвращает куб числа. 
// Число передается параметром. 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только число.

// ```js
// f(2); // 8
// f('Content'); // Error: parameter type is not a Number
// ```

// ####Задача 2

// Напишите функцию `f` которая возвращает сумму всех параметров. 
// Количество параметров может быть любым. 
// Данная функция должна обязательно содержать проверку входных параметров, потому что принимать она может только числа.

// ```js
// f(1,2,3); // 6
// f(1,1,1,1,1,1,1,1); // 8
// f(1,2,'s',4); // Error: all parameters type should be a Number
// ```

// ####Задача 3

// Сделайте функцию `f`, которая отнимает от первого числа второе и делит на третье. 
// Данная функция должна обязательно содержать проверку входных параметров, потому что принимать она может только числа.

// ```js
// f(9,3,2); // 3
// f('s',9,3) // Error: all parameters type should be a Number
// ```

// ####Задача 4

// Сделайте функцию `f`, которая принимает параметром число от 1 до 7, а затем возвращает день недели на русском языке. 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только числа от 1 до 7.

// ```js
// f(1); // Воскресенье
// f(2); // Понедельник
// f(8); // Error: parameter should be in the range of 1 to 7
// f('1'); // Error: parameter type is not a Number
// ```

// ####Задача 5

// Дан массив с числами `[1, 2, -4, 3, -9, -1, 7]`. 
// Создайте из него новый массив, где останутся лежать только положительные числа `[1, 2, 3, 7]`. 
// Создайте для этого вспомогательную функцию `isPositive(-3)`, которая параметром будет принимать число и возвращать true, если число положительное, и false — если отрицательное. 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только число.

// *Для добавление нового элемента в конец массива используйте метод push*

// ```js
// // Пример использования функции isPositvie()
// isPositive(-3) // вернет false
// isPositive(3) // вернет true
// isPositive('s') // Error: parameter type is not a Number

// // Пример использования метода push
// var arr = [8];
// arr.push(2);
// console.log(arr[1]); // выведет число 2
// ```

// ####Задача 6

// Сделайте функцию `isEven()`, которая параметром принимает целое число и проверяет: чётное оно или нет. Если чётное — функция возвращает `true`, если нечётное — `false`. 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только число.

// *Чётные числа могут делится на 2 без остатка.*

// ```js
// isEven(3); // false
// isEven(4); // true
// isEven('Content'); // Error: parameter type is not a Number
// ```

// ####Задача 7

// Сделайте функцию `getDivisors`, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число начиная от 1 и заканчивая самим собой). 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только число больше 0.

// ```js
// getDivisors(12); // [1, 2, 3, 4, 6, 12]
// getDivisors('Content'); // Error: parameter type is not a Number
// getDivisors(0); // Error: parameter can't be a 0
// ```

// ####Задача 8

// Дан массив с числами `[1, 2, 3]`. Создайте функцию `f`, которая принимает данный массив в качестве параметров, а затем последовательно выводит на экран его элементы. 
// Обязательно нужно использовать рекурсию. Использовать цикл запрещено. 
// Данная функция должна обязательно содержать проверку входного параметра, потому что принимать она может только не пустой массив.

// *Возможно вам понадобится метод [splice](https://developer.mozilla.org/uk/docs/Web/JavaScript/Reference/Global_Objects/Array/splice).*

// ```js
// f([1,2,3]);
// // 1
// // 2
// // 3
// f(1,2,3) // Error: parameter type should be an array
// f('Content') // Error: parameter type should be an array
// f([]) // Error: parameter can't be an empty
// ```